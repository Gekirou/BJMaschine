package de.cfc.bjm.data;

import android.content.Context;
import android.database.Cursor;
import android.util.TypedValue;
import android.view.Gravity;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AbsListView;
import android.widget.BaseExpandableListAdapter;
import android.widget.TextView;
import de.cfc.bjm.R;

public class SimpleUserSelectAdapter extends BaseExpandableListAdapter{
	

	Context myContext;
	
	public SimpleUserSelectAdapter(Context context){
		myContext = context;
		DataHolder.db.open();

	}
	
    public TextView getParentView() {
        // Layout parameters for the ExpandableListView
        AbsListView.LayoutParams lp = new AbsListView.LayoutParams(
            ViewGroup.LayoutParams.FILL_PARENT, 64);

        TextView textView = new TextView(myContext);
        textView.setLayoutParams(lp);
        // Center the text vertically
        textView.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
        textView.setTextColor(R.color.black);
        textView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 30);
        // Set the text starting position
        textView.setPadding(50, 0, 0, 0);
        return textView;
    }
    
    public TextView getItemView() {
        // Layout parameters for the ExpandableListView
        AbsListView.LayoutParams lp = new AbsListView.LayoutParams(
            ViewGroup.LayoutParams.FILL_PARENT, 64);
        
        TextView textView = new TextView(myContext);
        textView.setLayoutParams(lp);
        // Center the text vertically
        textView.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
        textView.setTextColor(R.color.black);
        textView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 20);
        // Set the text starting position
        textView.setPadding(100, 0, 0, 0);
        return textView;
    }
	
	public Object getChild(int groupPosition, int childPosition) {
		Cursor cur = DataHolder.db.getAllUsersFromVerbindung(groupPosition);
		cur.move(childPosition+1);
		return cur.getString(1);
	}

	public long getChildId(int groupPosition, int childPosition) {
		Cursor cur = DataHolder.db.getAllUsersFromVerbindung(groupPosition);
		cur.move(childPosition+1);
		return cur.getInt(0);
	}

	public View getChildView(int groupPosition, int childPosition,
			boolean isLastChild, View convertView, ViewGroup parent) {

//		LayoutInflater in = (LayoutInflater) myContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
//		convertView = in.inflate(R.layout.us_childview, parent);
        TextView textView = (TextView) getItemView();
        textView.setText(getChild(groupPosition, childPosition).toString());
        textView.setId((int) getChildId(groupPosition, childPosition));
        return convertView;
	}

	public int getChildrenCount(int groupPosition) {
		Cursor cur = DataHolder.db.getAllUsersFromVerbindung(groupPosition);
		return cur.getCount();
	}

	public Object getGroup(int groupPosition) {
		Cursor cur = DataHolder.db.getVerbindungen();
		cur.move(groupPosition);
		return cur.getString(1);
	}

	public int getGroupCount() {
		Cursor cur = DataHolder.db.getVerbindungen();
		return cur.getCount();
	}

	public long getGroupId(int groupPosition) {
		return groupPosition;
	}

	public View getGroupView(int groupPosition, boolean isExpanded,
			View convertView, ViewGroup parent) {
	       TextView textView = getParentView();
	        textView.setText(getGroup(groupPosition).toString());
	        return textView;
	}

	public boolean hasStableIds() {
		return true;
	}

	public boolean isChildSelectable(int groupPosition, int childPosition) {
		return true;
	}

}
